<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow
                          http://www.springframework.org/schema/webflow/spring-webflow.xsd">

    <!-- returning and adding inside flow addLocationFlowModel instance -->
    <on-start>
        <evaluate expression="addTrailerFlowHandler.init()"
                  result="flowScope.addTrailerFlowModel" />
    </on-start>

    <!--  Flow Steps  -->
    <!-- Step 1: Setup the trailer information  -->
    <!-- Step 2: For receiving trailer, create receipt or attach existing receipt -->
    <!-- Step 3: For shipping trailer, create shipment or attach existing shipment -->
    <!-- Step 4: Confirm and serialize the trailer data -->

    <!-- Step 1: Setup the trailer information  -->
    <view-state id="addTrailer" view="common/trailer/new" model="flowScope.addTrailerFlowModel">
        <on-render>
            <set name="viewScope.applicationID" value="'Common'" type="java.lang.String"></set>
            <set name="viewScope.formID" value="'Trailer'" type="java.lang.String"></set>
        </on-render>
        <transition on="saveTrailer" to="saveTrailer" />
    </view-state>

    <!-- Step 1.1: save the trailer information  -->
    <action-state id="saveTrailer">
        <evaluate expression="addTrailerFlowHandler.saveTrailer(flowScope.addTrailerFlowModel, requestParameters, externalContext.nativeRequest.session)" />
        <transition to="validateTrailerType" />
    </action-state>


    <!-- Step 1.5: flow based on the type of the trailer -->
    <decision-state id="validateTrailerType">
        <if test="addTrailerFlowHandler.isReceivingTrailer(flowScope.addTrailerFlowModel)"
            then="addEmptyReceipt"
            else="addShipment" />
    </decision-state>


    <!-- Step 2.0: Create an empty receipt and set it as current receipt -->
    <action-state id="addEmptyReceipt">
        <evaluate expression="addTrailerFlowHandler.addEmptyReceipt(flowScope.addTrailerFlowModel)" />
        <transition to="setupReceipt" />
    </action-state>

    <!-- Step 2.1: For receiving trailer, create receipt or attach existing receipt -->
    <view-state id="setupReceipt" view="inbound/receipt/new"  model="flowScope.addTrailerFlowModel.trailer.receipt">
        <on-render>
            <set name="viewScope.applicationID" value="'Common'" type="java.lang.String"></set>
            <set name="viewScope.formID" value="'Trailer'" type="java.lang.String"></set>
            <set name="viewScope.flowID" value="'Trailer.Receipt'" type="java.lang.String"></set>
        </on-render>
        <transition on="moreReceipt"  to="saveReceiptAndAddEmptyReceipt" />
        <transition on="saveReceipt"  to="saveReceipt" />
        <transition on="removeReceipt"  to="removeReceipt" />
        <transition on="previous"  to="addTrailer" />
    </view-state>

    <action-state id="removeReceipt">
        <evaluate expression="addTrailerFlowHandler.removeReceipt(flowScope.addTrailerFlowModel, requestParameters)" />
        <transition to="addEmptyReceipt" />
    </action-state>

    <action-state id="saveReceiptAndAddEmptyReceipt">
        <evaluate expression="addTrailerFlowHandler.saveReceipt(flowScope.addTrailerFlowModel, requestParameters)" />
        <transition to="addEmptyReceipt" />
    </action-state>

    <!-- Step 2.2: Save receipt and start to create receipt line -->
    <action-state id="saveReceipt">
        <evaluate expression="addTrailerFlowHandler.saveReceipt(flowScope.addTrailerFlowModel, requestParameters)" />
        <transition to="setupReceiptLine" />
    </action-state>

    <view-state id="setupReceiptLine" view="inbound/receipt/newReceiptLine"  model="flowScope.addTrailerFlowModel">
        <on-render>
            <set name="viewScope.applicationID" value="'Common'" type="java.lang.String"></set>
            <set name="viewScope.formID" value="'Trailer'" type="java.lang.String"></set>
            <set name="viewScope.flowID" value="'Trailer.Receipt.Line'" type="java.lang.String"></set>
        </on-render>
        <transition on="moreReceipt"  to="saveReceiptLineAndAddEmptyReceipt" />
        <transition on="saveReceiptLine"  to="saveReceiptLine" />
        <transition on="confirmTrailer"  to="saveReceiptLineAndConfirmTrailer" />
        <transition on="previous"  to="setupReceipt" />
        <transition on="removeReceiptLine"  to="removeReceiptLine" />
    </view-state>

    <action-state id="saveReceiptLineAndAddEmptyReceipt">
        <evaluate expression="addTrailerFlowHandler.saveReceiptLine(flowScope.addTrailerFlowModel, requestParameters)" />
        <transition to="addEmptyReceipt" />
    </action-state>

    <action-state id="saveReceiptLineAndConfirmTrailer">
        <evaluate expression="addTrailerFlowHandler.saveReceiptLine(flowScope.addTrailerFlowModel, requestParameters)" />
        <transition to="confirmTrailer" />
    </action-state>

    <action-state id="removeReceiptLine">
        <evaluate expression="addTrailerFlowHandler.removeReceiptLine(flowScope.addTrailerFlowModel, requestParameters)" />
        <transition to="setupReceiptLine" />
    </action-state>

    <!-- Step 2.3: Save receipt and start to create receipt line -->
    <action-state id="saveReceiptLine">
        <evaluate expression="addTrailerFlowHandler.saveReceiptLine(flowScope.addTrailerFlowModel, requestParameters)" />
        <transition to="setupReceiptLine" />
    </action-state>

    <!-- Step 4: Confirm and serialize the trailer data -->
    <view-state id="confirmTrailer" view="common/trailer/confirm"  model="flowScope.addTrailerFlowModel">
        <on-render>
            <set name="viewScope.applicationID" value="'Common'" type="java.lang.String"></set>
            <set name="viewScope.formID" value="'Trailer'" type="java.lang.String"></set>
            <set name="viewScope.flowID" value="'Trailer.Confirm'" type="java.lang.String"></set>
        </on-render>
        <transition on="serializeTrailer"  to="serializeTrailer" />
        <transition on="previous"  to="setupReceiptLine" />
    </view-state>
    <action-state id="serializeTrailer">
        <evaluate expression="addTrailerFlowHandler.serializeTrailer(flowScope.addTrailerFlowModel)" />
        <transition to="success" />
    </action-state>

    <!-- end state -->
    <end-state id="success" view="externalRedirect:contextRelative:/common/trailer" />
    <end-state id="home" view="externalRedirect:contextRelative:/common/trailer" />

    <!-- Global Transition -->
    <global-transitions>
        <transition on="home" to="home" validate="false" />
    </global-transitions>



</flow>